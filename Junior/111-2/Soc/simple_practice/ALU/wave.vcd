$version Generated by VerilatedVcd $end
$timescale 1s $end

 $scope module top $end
  $var wire  4 8 a [3:0] $end
  $var wire  4 9 b [3:0] $end
  $var wire  1 : c_in $end
  $var wire  1 = c_out $end
  $var wire  4 < result [3:0] $end
  $var wire  2 ; sel [1:0] $end
  $scope module ALU_4 $end
   $var wire  4 8 a [3:0] $end
   $var wire  4 9 b [3:0] $end
   $var wire  1 : c_in $end
   $var wire  1 = c_out $end
   $var wire  1 # out_0 $end
   $var wire  1 $ out_1 $end
   $var wire  1 % out_2 $end
   $var wire  4 < result [3:0] $end
   $var wire  2 ; sel [1:0] $end
   $scope module op1 $end
    $var wire  1 > a $end
    $var wire  1 ? b $end
    $var wire  1 : c_in $end
    $var wire  1 # c_out $end
    $var wire  1 ' out_0 $end
    $var wire  1 @ out_1 $end
    $var wire  1 A out_2 $end
    $var wire  1 & result $end
    $var wire  2 ; sel [1:0] $end
    $scope module add $end
     $var wire  1 > a $end
     $var wire  1 ? b $end
     $var wire  1 ' c1 $end
     $var wire  1 B c2 $end
     $var wire  1 : c_in $end
     $var wire  1 # c_out $end
     $var wire  1 ( s1 $end
     $var wire  1 A sum $end
    $upscope $end
    $scope module mux $end
     $var wire  1 ' a_i $end
     $var wire  1 @ b_i $end
     $var wire  1 A c_i $end
     $var wire  1 & q_o $end
     $var wire  2 ; sel_i [1:0] $end
    $upscope $end
   $upscope $end
   $scope module op2 $end
    $var wire  1 C a $end
    $var wire  1 D b $end
    $var wire  1 # c_in $end
    $var wire  1 $ c_out $end
    $var wire  1 * out_0 $end
    $var wire  1 E out_1 $end
    $var wire  1 + out_2 $end
    $var wire  1 ) result $end
    $var wire  2 ; sel [1:0] $end
    $scope module add $end
     $var wire  1 C a $end
     $var wire  1 D b $end
     $var wire  1 * c1 $end
     $var wire  1 - c2 $end
     $var wire  1 # c_in $end
     $var wire  1 $ c_out $end
     $var wire  1 , s1 $end
     $var wire  1 + sum $end
    $upscope $end
    $scope module mux $end
     $var wire  1 * a_i $end
     $var wire  1 E b_i $end
     $var wire  1 + c_i $end
     $var wire  1 ) q_o $end
     $var wire  2 ; sel_i [1:0] $end
    $upscope $end
   $upscope $end
   $scope module op3 $end
    $var wire  1 F a $end
    $var wire  1 G b $end
    $var wire  1 $ c_in $end
    $var wire  1 % c_out $end
    $var wire  1 / out_0 $end
    $var wire  1 H out_1 $end
    $var wire  1 0 out_2 $end
    $var wire  1 . result $end
    $var wire  2 ; sel [1:0] $end
    $scope module add $end
     $var wire  1 F a $end
     $var wire  1 G b $end
     $var wire  1 / c1 $end
     $var wire  1 2 c2 $end
     $var wire  1 $ c_in $end
     $var wire  1 % c_out $end
     $var wire  1 1 s1 $end
     $var wire  1 0 sum $end
    $upscope $end
    $scope module mux $end
     $var wire  1 / a_i $end
     $var wire  1 H b_i $end
     $var wire  1 0 c_i $end
     $var wire  1 . q_o $end
     $var wire  2 ; sel_i [1:0] $end
    $upscope $end
   $upscope $end
   $scope module op4 $end
    $var wire  1 I a $end
    $var wire  1 J b $end
    $var wire  1 % c_in $end
    $var wire  1 = c_out $end
    $var wire  1 4 out_0 $end
    $var wire  1 K out_1 $end
    $var wire  1 5 out_2 $end
    $var wire  1 3 result $end
    $var wire  2 ; sel [1:0] $end
    $scope module add $end
     $var wire  1 I a $end
     $var wire  1 J b $end
     $var wire  1 4 c1 $end
     $var wire  1 7 c2 $end
     $var wire  1 % c_in $end
     $var wire  1 = c_out $end
     $var wire  1 6 s1 $end
     $var wire  1 5 sum $end
    $upscope $end
    $scope module mux $end
     $var wire  1 4 a_i $end
     $var wire  1 K b_i $end
     $var wire  1 5 c_i $end
     $var wire  1 3 q_o $end
     $var wire  2 ; sel_i [1:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
1$
1%
0&
1'
0(
0)
0*
0+
1,
1-
0.
0/
00
11
12
03
04
05
16
17
b0111 8
b1001 9
0:
b10 ;
b0000 <
1=
1>
1?
1@
0A
0B
1C
0D
1E
1F
0G
1H
0I
1J
1K
#1
0%
0'
1(
1.
10
01
02
13
15
07
b0011 8
b1000 9
1:
b1100 <
0=
0?
1B
0F
0H
#2
0#
0$
0(
1)
1+
0-
0.
00
03
05
06
b0000 8
b0010 9
0:
b0010 <
0>
0@
0B
0C
1D
0J
0K
#3
1&
0)
0+
0,
1.
10
11
13
15
16
b0100 8
b1000 9
1:
b1101 <
1A
0D
0E
1F
1H
1J
1K
#4
1#
1$
0&
1'
1,
1-
01
b0011 8
b1001 9
0:
b1100 <
1>
1?
1@
0A
1C
1E
0F
0H
